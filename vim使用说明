Vim 是一个功能强大的文本编辑器，拥有大量的命令和快捷键。以下是一些常用的 Vim 指令，按功能分类整理，帮助你更好地掌握 Vim 的使用。


1.基本操作

• 启动 Vim：

• `vim`：启动 Vim。

• `vim file.txt`：打开文件`file.txt`。

• 退出 Vim：

• `:w`：保存文件。

• `:wq`或`ZZ`：保存并退出。

• `:q`：退出（如果文件未修改）。

• `:q!`或`ZQ`：强制退出，不保存更改。

• 切换模式：

• `i`：进入插入模式。

• `Esc`：从插入模式返回普通模式。

• `v`：进入可视模式（逐字符选择）。

• `V`：进入可视模式（逐行选择）。

• `Ctrl + v`：进入可视模式（逐块选择）。


2.文件操作

• 打开文件：

• `:e file.txt`：打开文件`file.txt`。

• `:e #`：切换到上一个文件。

• 保存文件：

• `:w`：保存当前文件。

• `:w file2.txt`：将当前内容保存到`file2.txt`。

• `:w!`：强制保存（即使文件没有写权限）。

• 查看文件状态：

• `:ls`：列出当前打开的文件。

• `:bd`：关闭当前缓冲区。

• `:bd!`：强制关闭当前缓冲区。


3.编辑操作

• 插入文本：

• `i`：在光标前插入文本。

• `a`：在光标后插入文本。

• `I`：在行首插入文本。

• `A`：在行尾插入文本。

• `o`：在当前行下方插入新行。

• `O`：在当前行上方插入新行。

• 删除文本：

• `x`：删除光标下的字符。

• `dd`：删除当前行。

• `dw`：删除当前单词。

• `db`：删除当前单词的前半部分。

• `d$`：删除光标到行尾的内容。

• `d0`：删除光标到行首的内容。

• 复制和粘贴：

• `yy`：复制当前行。

• `yw`：复制当前单词。

• `p`：在光标后粘贴。

• `P`：在光标前粘贴。

• `"+p`：粘贴系统剪贴板的内容。

• 撤销和重做：

• `u`：撤销上一步操作。

• `Ctrl + r`：重做上一步操作。


4.移动光标

• 基本移动：

• `h`：左移。

• `j`：下移。

• `k`：上移。

• `l`：右移。

• 快速移动：

• `gg`：跳到文件开头。

• `G`：跳到文件结尾。

• `nG`：跳到第 n 行。

• `0`：跳到行首。

• `$`：跳到行尾。

• `w`：跳到下一个单词的开头。

• `b`：跳到上一个单词的开头。

• `e`：跳到当前单词的结尾。

• 屏幕移动：

• `Ctrl + u`：向上滚动半屏。

• `Ctrl + d`：向下滚动半屏。

• `Ctrl + f`：向下滚动一屏。

• `Ctrl + b`：向上滚动一屏。

• `zz`：将当前行移动到屏幕中间。

• `zt`：将当前行移动到屏幕顶部。

• `zb`：将当前行移动到屏幕底部。


5.查找和替换

• 查找：

• `/pattern`：向下查找匹配的字符串。

• `?pattern`：向上查找匹配的字符串。

• `n`：查找下一个匹配项。

• `N`：查找上一个匹配项。

• 替换：

• `:s/old/new/`：替换当前行的第一个匹配项。

• `:s/old/new/g`：替换当前行的所有匹配项。

• `:%s/old/new/g`：替换整个文件的所有匹配项。

• `:%s/old/new/gc`：替换整个文件的所有匹配项，并提示确认。


6.窗口操作

• 分屏：

• `:split`或`:sp`：水平分屏。

• `:vsplit`或`:vsp`：垂直分屏。

• `Ctrl + w n`：新建一个水平分屏窗口。

• `Ctrl + w v`：新建一个垂直分屏窗口。

• 切换窗口：

• `Ctrl + w h/j/k/l`：在分屏窗口之间切换。

• `Ctrl + w w`：循环切换分屏窗口。

• 调整窗口大小：

• `Ctrl + w +`：增加当前窗口的高度。

• `Ctrl + w -`：减少当前窗口的高度。

• `Ctrl + w >`：增加当前窗口的宽度。

• `Ctrl + w <`：减少当前窗口的宽度。

• `Ctrl + w =`：平均分配窗口大小。

• 关闭窗口：

• `Ctrl + w c`：关闭当前窗口。

• `:only`：关闭所有窗口，只保留当前窗口。


7.宏和寄存器

• 录制宏：

• `q<register>`：开始录制宏到寄存器`<register>`（例如`qa`）。

• `q`：停止录制。

• `@<register>`：执行寄存器中的宏（例如`@a`）。

• 使用寄存器：

• `"ayy`：将当前行复制到寄存器`a`。

• `"ap`：从寄存器`a`粘贴内容。


8.其他实用命令

• 显示行号：

• `:set number`：显示行号。

• `:set nonumber`：隐藏行号。

• 高亮显示匹配的括号：

• `:set showmatch`：开启匹配括号高亮。

• 自动缩进：

• `:set autoindent`：开启自动缩进。

• `:set cindent`：开启 C 语言风格的自动缩进。

• 语法高亮：

• `:syntax on`：开启语法高亮。

• `:syntax off`：关闭语法高亮。

• 拼写检查：

• `:set spell`：开启拼写检查。

• `:set nospell`：关闭拼写检查。

• 查找并替换：

• `:%s/old/new/g`：替换文件中所有匹配的字符串。

• `:%s/old/new/gc`：替换文件中所有匹配的字符串，并提示确认。


9.插件管理

• 使用 Vundle 安装插件：

• 在`.vimrc`文件中添加插件配置：

```vim
    set nocompatible
    filetype off
    set rtp+=~/.vim/bundle/Vundle.vim
    call vundle#begin()
    Plugin 'VundleVim/Vundle.vim'
    Plugin 'your-plugin-repo'  " 替换为具体的插件仓库地址
    call vundle#end()
    filetype plugin indent on
    ```


• 保存`.vimrc`文件后，打开 Vim 并运行`:PluginInstall`。


10.常用快捷键

• 撤销和重做：

• `u`：撤销。

• `Ctrl + r`：重做。

• 复制和粘贴：

• `yy`：复制当前行。

• `p`：粘贴。

• 删除：

• `dd`：删除当前行。

• `x`：删除光标下的字符。

• 查找：

• `/pattern`：向下查找。

• `?pattern`：向上查找。

• `n`：查找下一个匹配项。

• `N`：查找上一个匹配项。

• 窗口操作：

• `Ctrl + w h/j/k/l`：在分屏窗口之间切换。

• `Ctrl + w =`：平均分配窗口大小。

• `Ctrl + w c`：关闭当前窗口。
